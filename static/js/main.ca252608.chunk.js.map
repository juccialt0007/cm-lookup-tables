{"version":3,"sources":["getEternal.js","App.js","reportWebVitals.js","index.js"],"names":["GetEternal","props","btnVisNrm","setState","visibilityNormal","visibilityVeteran","sheetType","btnVisVet","state","mp","workers","eternalPrice","updateTimer","minepower","planets","oracle_adjustment","worker_count","success_chance","setMP","bind","setWorkers","a","fetch","response","json","data","this","console","log","loadData","setInterval","clearInterval","i","parseFloat","getMineUSD","toFixed","getRewardsVersusSuccess","getMPvsSRforNET","diff","getMinePower","divi","Math","floor","answer","getSuccessChance","event","target","value","class","type","onClick","onChange","id","print","push","getMineETL","getContractCost","getNetProfit","getMPvsSR","getVetRewardsVersusSuccess","getVetContractCost","getAdjustedNetProfit","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca252608.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './App.css';\r\nimport './table.css';\r\n\r\n\r\nclass GetEternal extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.state = {\r\n            mp: 0,\r\n            workers: 0,\r\n            eternalPrice: 0,\r\n            updateTimer: 0,\r\n            minepower: [100,200,300,400,500,600,700,800,900,1000,1100,1200,1300,1400,1500,1600,1700,1800,1900,2000,2100,2200,2300,2400,2500,2600,2700,2800,2900,3000],\r\n            planets: [\"Odrocury\",\"Thabbiter\",\"Pulmeron\",\"Ecryria\",\"Searus\",\"Gemia\",\"Malphus\",\"Neuter\",\"Grarvis 022\",\"Sorth 33A5\",\"Dutrabos\",\"Lustronides\",\"Zullosie\",\"Yimagua\",\"Haostea\",\"Kongebro\",\"Vuruturn\",\"Droxuyama\",\"Miuq I11\",\"Zapus 5M0\",\"Begelia\",\"Gochimars\",\"Konvides\",\"Donvillon\",\"Ania\",\"Aenerth\",\"Tachiron\",\"Cichurilia\",\"Gagua 07\",\"Sector G\"],\r\n            oracle_adjustment: [1,2,3,4.125,5.25,6.5,7.75,9,10.25,11.625,14.375,16.125,18,19.875,22.375,24.125,26.5,28.875,31.375,34,44.5,48.5,52.75,57.25,62,67.125,72.5,78.25,84.25,90.75],\r\n            worker_count: [2,2,3,4,4,6,7,8,9,10,11,12,12,13,13,14,14,15,15,16,17,18,19,20,21,22,23,24,25,26],\r\n            success_chance: [0.88,0.86,0.84,0.82,0.80,0.78,0.76,0.74,0.72,0.70,0.68,0.66,0.64,0.62,0.60,0.58,0.56,0.54,0.52,0.50,0.50,0.50,0.50,0.50,0.50,0.50,0.50,0.50,0.50,0.50],\r\n            visibilityNormal: \"\",\r\n            visibilityVeteran: \"d-none\",\r\n            sheetType: \"Normal\"\r\n        }\r\n        \r\n        this.setMP = this.setMP.bind(this);\r\n        this.setWorkers = this.setWorkers.bind(this);\r\n    }\r\n\r\n    async loadData(){\r\n        const url = \"https://api.coingecko.com/api/v3/simple/price?ids=cryptomines-eternal&vs_currencies=usd\"\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        this.setState({eternalPrice: data[\"cryptomines-eternal\"][\"usd\"]})\r\n        console.log(data);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.loadData()\r\n        this.updateTimer = setInterval(() => this.loadData(), 2000);\r\n    }\r\n\r\n    async componentWillUnmount() {\r\n        clearInterval(this.updateTimer);\r\n    }\r\n\r\n\r\n    // Normal\r\n\r\n    getMinePower(i){\r\n        return this.state.minepower[i]\r\n    }\r\n\r\n    getMineETL(i){\r\n        return parseFloat(this.getMineUSD(i)/this.state.eternalPrice).toFixed(3)\r\n    }\r\n\r\n    getMineUSD(i){\r\n        return parseFloat(5.0 * this.state.oracle_adjustment[i]).toFixed(2)\r\n    }\r\n\r\n    getSuccessChance(i){\r\n        return parseFloat(this.state.success_chance[i] * 100).toFixed(0)\r\n    }\r\n\r\n    getRewardsVersusSuccess(i){\r\n        return parseFloat(this.getMineUSD(i)*7 * this.state.success_chance[i]).toFixed(2)\r\n    }\r\n\r\n    getContractCost(i){\r\n        return parseFloat(((7*this.state.worker_count[i])/this.state.eternalPrice)).toFixed(3)\r\n    }\r\n\r\n    getNetProfit(i){\r\n        return parseFloat(this.getRewardsVersusSuccess(i) - (this.state.worker_count[i]*7)).toFixed(2)\r\n    }\r\n    \r\n    // Veteran\r\n    getVetContractCost(){\r\n        return parseFloat(((7*this.state.workers)/this.state.eternalPrice)).toFixed(3)\r\n    }\r\n    getVetRewardsVersusSuccess(i){\r\n        return parseFloat(this.getMineUSD(i)*7 * this.getMPvsSRforNET(i) / 100).toFixed(2)\r\n    }\r\n    getMPvsSR(i){\r\n        if (this.state.mp > 4899) {\r\n            return '88%'\r\n        } else if (this.state.mp > 1499 && this.state.mp < 4900) {\r\n            const diff = this.state.mp - this.getMinePower(i);\r\n            const divi = Math.floor(diff/50);\r\n            const answer = parseFloat(this.state.success_chance[i] * 100 + divi).toFixed(0);\r\n            if (answer > 88){\r\n                return '88%'\r\n            } else if (answer < 50 || this.state.mp < this.state.minepower[i]){\r\n                return 'Not Enough MP'\r\n            } else {\r\n                return answer+'%'\r\n            }\r\n        } else if (this.state.mp < 1500) {\r\n            return this.getSuccessChance(i)+'%'\r\n        }\r\n    }\r\n    //Cloned MP vs SR to use for NetProfit Calculation\r\n    getMPvsSRforNET(i){\r\n        if (this.state.mp > 4899) {\r\n            return 88\r\n        } else if (this.state.mp > 1499 && this.state.mp < 4900) {\r\n            const diff = this.state.mp - this.getMinePower(i);\r\n            const divi = Math.floor(diff/50);\r\n            const answer = parseFloat(this.state.success_chance[i] * 100 + divi).toFixed(0);\r\n            if (answer > 88){\r\n                return '88'\r\n            } else if ( answer < 50){\r\n                return 'Not Enough MP'\r\n            } else {\r\n                return answer\r\n            }\r\n        } else if (this.state.mp < 1500) {\r\n            return this.getSuccessChance(i)\r\n        }\r\n    }\r\n\r\n    getAdjustedNetProfit(i){\r\n        return parseFloat(((this.getMineUSD(i)*7) * (this.getMPvsSRforNET(i)/100)) - (this.state.workers*7)).toFixed(2)\r\n    }\r\n\r\n    setMP(event){\r\n        this.setState({mp : event.target.value})\r\n    }\r\n\r\n    setWorkers(event){\r\n        this.setState({workers: event.target.value})\r\n    }\r\n\r\n    btnVisNrm = () => {\r\n        this.setState({visibilityNormal: \"\", visibilityVeteran: \"d-none\", sheetType:\"Normal Sheet\"})\r\n    }\r\n    btnVisVet = () => {\r\n        this.setState({visibilityVeteran: \"\", visibilityNormal: \"d-none\", sheetType:\"Veteran/Input Sheet\"})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div class=\"container-fixed mx-5\">\r\n                <div class=\"container-fluid mx-2\">\r\n                    <div class=\"container-fluid\">\r\n                        <div class=\"row align-items-start border border-2 border-dark\"> \r\n                            <p class=\"col-4 getEternalHeader mt-3\"> <b>USD/ETL</b> -{'>'} <span class=\"text-primary\">{this.state.eternalPrice}</span></p>\r\n                            <p class=\"col-4 getEternalHeader mt-3\"> <b>Contract (7 Days) / Worker</b> -{'>'} <span class=\"text-primary\">{parseFloat(7/this.state.eternalPrice).toFixed(3)} ETL</span> </p>\r\n                            <p class=\"col-4 getEternalHeader mt-3\"> <b>Minting</b> -{'>'} <span class=\"text-primary\">{parseFloat(20/this.state.eternalPrice).toFixed(3)} ETL</span> </p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"my-3 row\">\r\n                        <div class=\"col-3 row\">\r\n                            <div class=\"col-3\">\r\n                                <button type=\"button\" class=\"btn btn-primary\" onClick={this.btnVisNrm}>Normal</button>\r\n                            </div>\r\n                            <div class=\"col-4\">\r\n                                <button type=\"button\" class=\"btn btn-secondary\" onClick={this.btnVisVet}>Input MP</button>\r\n                            </div>\r\n                            <div class=\"col-5\">\r\n                                <p class=\"text-center mt-2\">{this.state.sheetType}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-9 row\">\r\n                            <div class=\"col-1 pt-2\">\r\n                                <p class=\"text-left\">MP:</p>\r\n                            </div>\r\n                            <div class=\"col-2\">\r\n                                <input type=\"text\" class=\"input-group-text\" onChange={this.setMP}></input>\r\n                            </div>\r\n                            <div class=\"col-1 pt-2\">\r\n                                <p class=\"text-left\">Workers:</p>\r\n                            </div>\r\n                            <div class=\"col-2\">\r\n                                <input type=\"text\" class=\"input-group-text\" onChange={this.setWorkers}></input>\r\n                            </div>\r\n                    \r\n                            \r\n                        </div>\r\n                    </div>\r\n\r\n                    <div id=\"normal\" class={this.state.visibilityNormal}>\r\n                        <table>\r\n                            <tr class=\"border border-dark\">\r\n                                <th class=\"border border-2 border-dark\">#</th>\r\n                                <th class=\"border border-2 border-dark\">Planet</th>\r\n                                <th class=\"border border-2 border-dark\">MP</th>\r\n                                <th class=\"border border-2 border-dark\">Oracle Reward Multiplier</th>\r\n                                <th class=\"border border-2 border-dark\">Mine Reward (ETL)</th>\r\n                                <th class=\"border border-2 border-dark\">Mine Reward (USD)</th>\r\n                                <th class=\"border border-2 border-dark\">Success Rate (SR)</th>\r\n                                <th class=\"border border-2 border-dark\">7 Day Reward (USD) vs SR</th>\r\n                                <th class=\"border border-2 border-dark\">Est. Workers</th>\r\n                                <th class=\"border border-2 border-dark\">Worker Contract Upkeep / 7d </th>\r\n                                <th class=\"border border-2 border-dark\">Net Profit / 7d</th>\r\n                            </tr>\r\n                            {/* Normal */}\r\n                            {(() => {\r\n                                const print = [];\r\n                                for (let i=0; i<30; i++){\r\n                                    print.push(\r\n                                        <tr>\r\n                                            <td class=\"border border-secondary\">{i+1}</td>\r\n                                            <td class=\"border border-secondary\">{this.state.planets[i]}</td>\r\n                                            <td class=\"border border-secondary purp\">{this.getMinePower(i)}</td>\r\n                                            <td class=\"border border-secondary gray\">{parseFloat(this.state.oracle_adjustment[i]).toFixed(3)}</td>\r\n                                            <td class=\"border border-secondary text-primary\">{this.getMineETL(i)} ETL</td>\r\n                                            <td class=\"border border-secondary\">${this.getMineUSD(i)}</td>\r\n                                            <td class=\"border border-secondary text-secondary\"><b>{this.getSuccessChance(i)}%</b></td>\r\n                                            <td class=\"border border-secondary\">${this.getRewardsVersusSuccess(i)}</td>\r\n                                            <td class=\"border border-secondary\">{this.state.worker_count[i]}</td>\r\n                                            <td class=\"border border-secondary text-primary\">{this.getContractCost(i)} ETL</td>\r\n                                            <td class=\"border border-secondary\">${this.getNetProfit(i)}</td>\r\n                                        </tr>\r\n                                    )\r\n                                }\r\n                                return print\r\n                            })()}\r\n                            </table>\r\n                        </div>\r\n\r\n                        <div id=\"veteran\" class={this.state.visibilityVeteran}>\r\n                            <table>\r\n                                <tr class=\"border border-dark\">\r\n                                    <th class=\"border border-2 border-dark\">#</th>\r\n                                    <th class=\"border border-2 border-dark\">Planet</th>\r\n                                    <th class=\"border border-2 border-dark\">MP</th>\r\n                                    <th class=\"border border-2 border-dark\">Oracle Reward Multiplier</th>\r\n                                    <th class=\"border border-2 border-dark\">Mine Reward (ETL)</th>\r\n                                    <th class=\"border border-2 border-dark\">Mine Reward (USD)</th>\r\n                                    <th class=\"border border-2 border-dark\">Success Rate (SR)</th>\r\n                                    <th class=\"border border-2 border-dark\">7 Day Reward (USD) vs SR</th>\r\n                                    <th class=\"border border-2 border-dark\">Est. Workers</th>\r\n                                    <th class=\"border border-2 border-dark\">Worker Contract Upkeep / 7d </th>\r\n                                    <th class=\"border border-2 border-dark\">Net Profit / 7d</th>\r\n                                </tr>\r\n                                {/* Veteran */}\r\n                                {(() => {\r\n                                    const print = [];\r\n                                    for (let i=0; i<30; i++){\r\n                                        print.push(\r\n                                            <tr>\r\n                                                <td class=\"border border-secondary\">{i+1}</td>\r\n                                                <td class=\"border border-secondary\">{this.state.planets[i]}</td>\r\n                                                <td class=\"border border-secondary purp\">{this.getMinePower(i)}</td>\r\n                                                <td class=\"border border-secondary gray\">{parseFloat(this.state.oracle_adjustment[i]).toFixed(3)}</td>\r\n                                                <td class=\"border border-secondary text-primary\">{this.getMineETL(i)} ETL</td>\r\n                                                <td class=\"border border-secondary\">${this.getMineUSD(i)}</td>\r\n                                                <td class=\"border border-secondary text-secondary\"><b>{this.getMPvsSR(i)}</b></td>\r\n                                                <td class=\"border border-secondary\">${this.getVetRewardsVersusSuccess(i)}</td>\r\n                                                <td class=\"border border-secondary\">{this.state.workers}</td>\r\n                                                <td class=\"border border-secondary text-primary\">{this.getVetContractCost()} ETL</td>\r\n                                                <td class=\"border border-secondary\">${this.getAdjustedNetProfit(i)}</td>\r\n                                            </tr>\r\n                                        )\r\n                                    }\r\n                                    return print\r\n                                })()}\r\n                            </table>\r\n                        </div>\r\n\r\n\r\n                        <div class=\"row align-items-start mt-2\">\r\n                            <div class=\"col-6\">\r\n                                <p class=\"disclaimer\">\r\n                                Disclaimer: ORM Matrix is based on observation and not actual value (unless the devs gives us the Data).\r\n                                <br/>\r\n                                All values are approximation and should only be used as a template. ETL/USD updates are every 2 seconds.\r\n                                <br/>\r\n                                Mobile View is currently non-existent. You have been warned. <strike>I'll get back to it if I'm not busy.</strike>\r\n                                </p>\r\n                                \r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <p class=\"credits text-info\">\r\n                                Original Sheet and ORM Matrix by: Discord@starl3xx#2691\r\n                                <br/>\r\n                                Made by: Discord@Jucci#0007\r\n                                <br/>\r\n                                Found bugs? Want to help? Send us a message.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GetEternal\r\n","import GetEternal from './getEternal';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div class=\"container-fluid my-4\"><GetEternal/></div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}